function Write-SettingsFile {
    param (
        $SettingsFile
    )

    $Output = @()
   
    $Output += 'Setting;Value'   
    $Output +=  "WPF_DP_Disk_MBR.DiskSizeBytes;$($WPF_DP_Disk_MBR.DiskSizeBytes)" 

    $MBRPartitions = Get-AllGUIPartitions -PartitionType 'MBR'
    foreach ($Partition in $MBRPartitions) {
        $Output += "$($Partition.Name);StartingPositionBytes;$($Partition.Value.StartingPositionBytes)"
        $Output += "$($Partition.Name);ImportedPartition;$($Partition.Value.ImportedPartition)"   
        $Output += "$($Partition.Name);ImportedPartitionPath;$($Partition.Value.ImportedPartitionPath)"      
        $Output += "$($Partition.Name);VolumeName;$($Partition.Value.VolumeName)"    
        $Output += "$($Partition.Name);PartitionType;$($Partition.Value.PartitionType)"   
        $Output += "$($Partition.Name);ImportedFilesSpaceBytes;$($Partition.Value.ImportedFilesSpaceBytes)"
        $Output += "$($Partition.Name);DefaultMBRPartition;$($Partition.Value.DefaultMBRPartition)"
        $Output += "$($Partition.Name);ImportedFiles;$($Partition.Value.ImportedFiles)"   
        $Output += "$($Partition.Name);PartitionSizeBytes;$($Partition.Value.PartitionSizeBytes)"
        $Output += "$($Partition.Name);ImportedPartitionType;$($Partition.Value.ImportedPartitionType)"    
        $Output += "$($Partition.Name);ImportedPartitionMethod;$($Partition.Value.ImportedPartitionMethod)"    
        $Output += "$($Partition.Name);ImportedMBRPartitionNumber;$($Partition.Value.ImportedMBRPartitionNumber)"   
    }
    
    $AmigaPartitions = Get-AllGUIPartitions -PartitionType 'Amiga'
    foreach ($Partition in $AmigaPartitions) {
        $Output += "$($Partition.Name);StartingPositionBytes;$($Partition.Value.StartingPositionBytes)"
        $Output += "$($Partition.Name);ImportedPartition;$($Partition.Value.ImportedPartition)"   
        $Output += "$($Partition.Name);ImportedPartitionPath;$($Partition.Value.ImportedPartitionPath)"      
        $Output += "$($Partition.Name);VolumeName;$($Partition.Value.VolumeName)"    
        $Output += "$($Partition.Name);PartitionType;$($Partition.Value.PartitionType)"   
        $Output += "$($Partition.Name);ImportedFilesSpaceBytes;$($Partition.Value.ImportedFilesSpaceBytes)"
        $Output += "$($Partition.Name);ImportedFiles;$($Partition.Value.ImportedFiles)"  
        $Output += "$($Partition.Name);DefaultAmigaWorkPartition;$($Partition.Value.DefaultAmigaWorkPartition)"    
        $Output += "$($Partition.Name);PartitionSizeBytes;$($Partition.Value.PartitionSizeBytes)"
        $Output += "$($Partition.Name);ImportedPartitionType;$($Partition.Value.ImportedPartitionType)"    
        $Output += "$($Partition.Name);DefaultAmigaWorkbenchPartition;$($Partition.Value.DefaultAmigaWorkbenchPartition)" 
        $Output += "$($Partition.Name);ImportedPartitionMethod;$($Partition.Value.ImportedPartitionMethod)"    
        $Output += "$($Partition.Name);ImportedMBRPartitionNumber;$($Partition.Value.ImportedMBRPartitionNumber)"   
        $Output += "$($Partition.Name);Buffers;$($Partition.Value.Buffers)"  
        $Output += "$($Partition.Name);CanChangeBuffers;$($Partition.Value.CanChangeBuffers)"  
        $Output += "$($Partition.Name);CanRenameDevice;$($Partition.Value.CanRenameDevice)"  
        $Output += "$($Partition.Name);CanChangeBootable;$($Partition.Value.CanChangeBootable)"  
        $Output += "$($Partition.Name);Bootable;$($Partition.Value.Bootable)"  
        $Output += "$($Partition.Name);DosType;$($Partition.Value.DosType)"  
        $Output += "$($Partition.Name);CanChangePriority;$($Partition.Value.CanChangePriority)"  
        $Output += "$($Partition.Name);DeviceName;$($Partition.Value.DeviceName)"  
        $Output += "$($Partition.Name);CanChangeMountable;$($Partition.Value.CanChangeMountable)"  
        $Output += "$($Partition.Name);MaxTransfer;$($Partition.Value.MaxTransfer)"  
        $Output += "$($Partition.Name);NoMount;$($Partition.Value.NoMount)"  
        $Output += "$($Partition.Name);Priority;$($Partition.Value.Priority)"  
    }
    
    'Do not edit this file! It will break Emu68 Imager! You have been warned!' | Out-File $SettingsFile
    $Output | ForEach-Object {
        $_ | Out-File $SettingsFile -Append
    }
}

